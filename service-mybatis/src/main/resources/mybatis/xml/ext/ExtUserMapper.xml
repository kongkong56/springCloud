<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lxcs.mybatis.mapper.ext.ExtUserMapper">
    <resultMap id="BaseResultMap" type="com.lxcs.mybatis.bean.ext.ExtUserModel">
        <id column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="company_name" property="companyName" jdbcType="VARCHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="des3" property="des3" jdbcType="VARCHAR"/>
        <result column="mobile_number" property="mobileNumber" jdbcType="VARCHAR"/>
        <result column="extension_number" property="extensionNumber" jdbcType="VARCHAR"/>
        <result column="fenji_number" property="fenjiNumber" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="email_address" property="emailAddress" jdbcType="VARCHAR"/>
        <result column="user_flag" property="userFlag" jdbcType="VARCHAR"/>
        <result column="notes" property="notes" jdbcType="VARCHAR"/>
        <result column="old_user_no" property="oldUserNo" jdbcType="VARCHAR"/>
        <result column="user_no" property="userNo" jdbcType="VARCHAR"/>
        <result column="position" property="position" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="join_date" property="joinDate" jdbcType="VARCHAR"/>
        <result column="birthday" property="birthday" jdbcType="VARCHAR"/>
        <result column="id_no" property="idNo" jdbcType="VARCHAR"/>
        <result column="del_flag" property="delFlag" jdbcType="VARCHAR"/>
        <result column="manager_user_name" property="managerUserName" jdbcType="VARCHAR"/>
        <result column="create_group_cd" property="createGroupCd" jdbcType="VARCHAR"/>
        <result column="create_user_cd" property="createUserCd" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="VARCHAR"/>
        <result column="update_group_cd" property="updateGroupCd" jdbcType="VARCHAR"/>
        <result column="update_user_cd" property="updateUserCd" jdbcType="VARCHAR"/>
        <result column="update_date" property="updateDate" jdbcType="VARCHAR"/>
        <result column="department_id" property="departmentId" jdbcType="VARCHAR"/>
        <result column="department_cd" property="departmentCd" jdbcType="VARCHAR"/>
        <result column="department_name" property="departmentName" jdbcType="VARCHAR"/>
        <result column="department_p_cd" property="departmentPCd" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="user_sort_key" property="userSortKey" jdbcType="INTEGER"/>
        <result column="sort_key" property="sortKey" jdbcType="INTEGER"/>
        <result column="role_id" property="roleId" jdbcType="VARCHAR"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="role" property="role" jdbcType="VARCHAR"/>
        <result column="user_flag_name" property="userFlagName" jdbcType="VARCHAR"/>
        <result column="province" property="province" jdbcType="VARCHAR"/>
        <result column="city" property="city" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
		u.user_id, u.user_name, u.company_name, u.real_name, u.`password`, u.des3, u.mobile_number, u.address,
        u.extension_number,
    u.email_address, u.user_flag, u.notes, u.user_no, u.`position`, u.sex,u.user_sort_key,
    u.join_date, u.birthday, u.id_no, u.del_flag, u.create_group_cd, u.create_user_cd, u.create_date,
    u.update_group_cd, u.update_user_cd, u.update_date, d.id as department_id, d.department_cd, d.department_name, d.department_p_cd,d.status,d.sort_key,
    r.role_id,r.role_name
	</sql>

    <sql id="Where_Clause">
        <where>
            <if test="userId != null and userId != ''">
                and u.user_id = #{userId}
            </if>
            <if test="userName != null and userName != ''">
                <choose>
                    <when test="imFlag != null and imFlag != ''">
                        and u.user_name like CONCAT('%',#{userName},'%')
                    </when>
                    <otherwise>
                        and u.user_name = #{userName}
                    </otherwise>
                </choose>
            </if>
            <if test="realName != null and realName != ''">
                and u.real_name like CONCAT('%',#{realName},'%')
            </if>
            <if test="mobileNumber != null and mobileNumber != ''">
                and u.mobile_number like CONCAT('%',#{mobileNumber},'%')
            </if>
            <if test="emailAddress != null and emailAddress != ''">
                and u.email_address like CONCAT('%',#{emailAddress},'%')
            </if>
            <if test="delFlag != null and delFlag != ''">
                and u.del_flag =#{delFlag}
            </if>
            <if test="roleName != null and roleName != ''">
                and r.role_name like CONCAT('%',#{roleName},'%')
            </if>
            <if test="role != null and role != '' and role =='LAWMEMBER' ">
                and r.role IN ('LAWMEMBER','LAWMEMBER_LEADER')
            </if>
            <if test="role != null and role != '' and role !='LAWMEMBER' ">
                and r.role = #{role}
            </if>
            <if test="listDepartmentCd != null and listDepartmentCd.size() > 0">
                <choose>
                    <when test="imFlag == 1">
                        and (d.id in
                        <foreach collection="listDepartmentCd" item="listItem" open="(" close=")" separator=",">
                            #{listItem}
                        </foreach>
                        or d.department_cd is null or d.department_cd = '')
                    </when>
                    <otherwise>
                        and d.id in
                        <foreach collection="listDepartmentCd" item="listItem" open="(" close=")" separator=",">
                            #{listItem}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
        </where>
    </sql>

    <select id="selectUserListCount" resultType="java.lang.Integer"
            parameterType="com.lxcs.mybatis.bean.ext.ExtUserModel">
        select
        count(*)
        from c_m_user u left join c_m_department_user du on u.user_id = du.user_id and du.del_flag = '0' left join
        c_m_department d on du.department_cd = d.department_cd and du.del_flag = '0'
        left join c_m_user_role ur on ur.user_id = u.user_id and ur.del_flag = '0' left join c_m_role r on r.role_id =
        ur.role_id and r.del_flag = '0'
        <include refid="Where_Clause"/>
    </select>
    <select id="selectUserList" resultMap="BaseResultMap" parameterType="com.lxcs.mybatis.bean.ext.ExtUserModel">
		      SELECT DISTINCT
			u.user_id,
			u.user_name,
			u.real_name,
			u.mobile_number,
			u.email_address,
			u.extension_number,
			CASE
		WHEN u.del_flag = '1' THEN
			'是'
		ELSE
			'否'
		END del_flag,
		  CONCAT(dp.department_name,"-",d.department_name) department_name,
		 r.role_name
		FROM
			c_m_user u
		LEFT JOIN c_m_user_role ur ON ur.user_id = u.user_id
		LEFT JOIN c_m_role r ON r.role_id = ur.role_id
		LEFT JOIN c_m_department_user du ON u.user_id = du.user_id
		LEFT JOIN c_m_department d ON du.department_cd = d.department_cd
		LEFT JOIN  c_m_department dp ON dp.department_cd = d.department_p_cd
        <include refid="Where_Clause"/>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart >= 0">
            limit #{limitStart} , #{limitEnd}
        </if>
    </select>
    <select id="selectUserById" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        u.user_id, u.user_name, u.company_name, u.real_name, u.`password`, u.des3, u.mobile_number, u.address,
        u.email_address,
        u.extension_number,u.fenji_number,
        r.role_id,r.role_name,u.del_flag
        from c_m_user u
        left join c_m_user_role ur on ur.user_id = u.user_id and ur.del_flag = '0' left join c_m_role r on r.role_id =
        ur.role_id and r.del_flag = '0'
        where u.user_id = #{userId,jdbcType=VARCHAR}
    </select>

    <select id="selectAuthorizationUserList" resultMap="BaseResultMap"
            parameterType="com.lxcs.mybatis.bean.ext.ExtUserModel">
        select
        d.department_cd,
        d.department_name,
        u.user_id,
        u.real_name,
        u.position
        FROM
        c_m_user u LEFT JOIN c_m_department_user du ON u.user_id = du.user_id
        LEFT JOIN c_m_department d ON du.department_cd = d.department_cd
        <where>
            <if test="userName != null and userName != ''">
                and u.user_name = #{userName}
            </if>
            <if test="realName != null and realName != ''">
                and u.real_name LIKE concat('%', #{realName,jdbcType=VARCHAR}, '%')
            </if>
        </where>
        ORDER BY
        u.join_date DESC
        <if test="limitStart >= 0">
            limit #{limitStart} , #{limitEnd}
        </if>
    </select>

    <select id="selectInviteUserList" resultMap="BaseResultMap" parameterType="com.lxcs.mybatis.bean.ext.ExtUserModel">
        SELECT DISTINCT
            u.user_id,
            u.user_name,
            u.real_name,
            um.manager_user_name,
            u.mobile_number
        FROM
            c_m_user u
        INNER JOIN c_m_user_role ur ON ur.user_id = u.user_id
        INNER JOIN c_m_role r ON r.role_id = ur.role_id
        INNER JOIN c_m_department_user du ON du.user_id = u.user_id
        INNER JOIN c_m_department dep ON dep.department_cd = du.department_cd AND dep.del_flag = '0'
        LEFT JOIN c_m_user_main_user umu ON umu.user_id = u.user_id
        LEFT JOIN c_m_user_main um ON um.id = umu.user_main_id
        <where>
            u.del_flag = '0'
            <!-- 法务员 -->
            <if test="role == 'LAWMEMBER'.toString()">
                AND ( r.role = 'LAWMEMBER' OR r.role = 'LAWMEMBER_LEADER')
            </if>

            <!-- 外访员 -->
            <if test="role == 'VISIT'.toString()">
                AND r.role = 'VISIT'
            </if>

            <!-- 登录用户下的所有部门 -->
            <if test="listDepartmentCd != null and listDepartmentCd.size() > 0">
                and du.department_cd in
                <foreach collection="listDepartmentCd" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                </foreach>
            </if>
        </where>
    </select>

    <select id="selectLoginUserDepartmentAndArea" resultMap="BaseResultMap"
            parameterType="com.lxcs.mybatis.bean.ext.ExtUserModel">
        SELECT
        d.department_cd,
        d.department_name,
        '1' AS user_type,
        province,
        city
        FROM
        c_m_user u
        INNER JOIN c_m_department_user du ON u.user_id = du.user_id
        INNER JOIN c_m_department d ON du.department_cd = d.department_cd
        INNER JOIN c_m_department_area area ON du.department_cd = area.department_cd
        WHERE
        u.user_id = #{userId,jdbcType=VARCHAR}
        AND area.province IS NOT NULL
        UNION ALL
        SELECT
        d.department_cd,
        d.department_name,
        '2' AS user_type,
        province,
        city
        FROM
        c_m_user u
        LEFT JOIN c_m_department_user du ON u.user_id = du.user_id
        LEFT JOIN c_m_department d ON du.department_cd = d.department_cd
        LEFT JOIN c_m_department pd ON d.department_cd = pd.department_p_cd
        LEFT JOIN c_m_department_area area ON pd.department_cd = area.department_cd
        WHERE
        u.user_id = #{userId,jdbcType=VARCHAR}
        AND area.province IS NOT NULL
    </select>

    <select id="selectUserListByRole" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
			cmu.user_id, cmu.user_name, cmu.company_name, cmu.real_name, cmu.des3, cmu.mobile_number, cmu.address,
	        cmu.email_address, cmu.extension_number
		FROM
			c_m_user cmu
		WHERE
			cmu.user_id IN (
				SELECT
					cmur.user_id
				FROM
					c_m_user_role cmur
				WHERE
					cmur.role_id IN (
						SELECT
							cmr.role_id
						FROM
							c_m_role cmr
						WHERE
							cmr.role = #{role,jdbcType=VARCHAR}
					)
			)
		ORDER BY user_name ASC
    </select>
    <select id="selectUserListForIM" resultMap="BaseResultMap" parameterType="com.lxcs.mybatis.bean.ext.ExtUserModel">
        SELECT DISTINCT
        u.user_id,
        u.user_name,
        u.real_name,
        u.mobile_number,
        u.email_address,
        u.extension_number,
        CASE
        WHEN u.del_flag = '1' THEN
        '是'
        ELSE
        '否'
        END del_flag,
        CONCAT(dp.department_name,"-",d.department_name) department_name,
        r.role_name,
        d.id as department_id
        FROM
        c_m_user u
        LEFT JOIN c_m_user_role ur ON ur.user_id = u.user_id
        LEFT JOIN c_m_role r ON r.role_id = ur.role_id
        LEFT JOIN c_m_department_user du ON u.user_id = du.user_id
        LEFT JOIN c_m_department d ON du.department_cd = d.department_cd
        LEFT JOIN  c_m_department dp ON dp.department_cd = d.department_p_cd
        where u.del_flag = '0'
        <trim prefix="and" prefixOverrides="where">
            <include refid="Where_Clause"/>
        </trim>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart >= 0">
            limit #{limitStart} , #{limitEnd}
        </if>
    </select>
    
    <!-- 根据分公司和角色获取用户的id列表 -->
    <select id="getUserIdsByDepartmentAndRole" resultType="String">
    	SELECT
    		t1.user_id
    	FROM
    		c_m_user t1
    	LEFT JOIN
    		c_m_user_role t2 ON t1.user_id = t2.user_id
    	LEFT JOIN
    		c_m_role t3 ON t2.role_id = t3.role_id
    	LEFT JOIN
    		c_m_department_user t4 ON t1.user_id = t4.user_id
    	LEFT JOIN
    	    c_m_department t5 ON t4.department_cd = t5.department_cd
    	LEFT JOIN
    		c_m_department t6 ON t5.department_p_cd = t6.department_cd
    	WHERE
    		t3.role = #{role}
    		AND (t5.department_cd = #{departmentCd} OR t5.department_p_cd = #{departmentCd} OR t6.department_p_cd = #{departmentCd})
    		AND t1.del_flag = '0'
    		AND t2.del_flag = '0'
    		AND t3.del_flag = '0'    		 			
    		AND t4.del_flag = '0'
    </select>
</mapper>